<?php
/**
 * Part of the FuelPHP framework.
 *
 * @package    Fuel
 * @version    2.0.0
 * @license    MIT License
 * @copyright  2010 - 2012 Fuel Development Team
 */

/**
 * Configure paths
 * (these constants are helpers and are not required by Fuel itself)
 */
define('DOCROOT', __DIR__.'/public/');
define('FUELPATH', DOCROOT.'../fuelphp/');
define('APPPATH', FUELPATH.'oil/');

/**
 * Setup environment
 */
require FUELPATH.'fuel/kernel/classes/Fuel/Kernel/Environment.php';
$env = new Fuel\Kernel\Environment();
$env->init(array(
	'name'  => isset($_SERVER['FUEL_ENV']) ? $_SERVER['FUEL_ENV'] : 'development',
	'path'  => FUELPATH,
));

/**
 * Initialize Application in package 'app'
 */
$app = $env->loader->loadApplication('fuel/oil', function() {});

/**
 * Run Oil
 */
try
{
	// Generates a URI based on the commandline input
	for ($uri = '', $i = 1; ($arg = $env->cli()->option($i)) and strncmp($arg, '-', 1) != 0; $i++)
	{
		$uri .= '/'.$arg;
	}
	$env->cli()->write($app->request($uri)->execute()->response());
}
catch (\Exception $e)
{
	$env->cli()->error(get_class($e).': '.$e->getMessage());
	$env->cli()->error('    file: '.$e->getFile());
	$env->cli()->error('    line: '.$e->getLine());
	$env->cli()->beep();
	$env->cli()->option('speak') and `say --voice="Trinoids" "{$e->getMessage()}"`;
}
